service: serverless-chat
package:
    individually: true
provider:
    name: aws
    runtime: nodejs20.x
    region: ap-southeast-1
    environment:
        WSSAPIGATEWAYENDPOINT:
            Fn::Join:
                - ''
                - - Ref: WebsocketsApi
                  - '.execute-api.'
                  - Ref: AWS::Region
                  - '.amazonaws.com/${sls:stage}'
    iam:
        role:
            statements:
                - Effect: Allow
                  Action:
                      - 'dynamodb:PutItem'
                      - 'dynamodb:GetItem'
                      - 'dynamodb:DeleteItem'
                      - 'dynamodb:Scan'
                  Resource:
                      - { 'Fn::GetAtt': ['ClientsTable', 'Arn'] }
                - Effect: Allow
                  Action:
                      - 'dynamodb:Query'
                  Resource:
                      Fn::Join:
                          - '/'
                          - - { 'Fn::GetAtt': ['ClientsTable', 'Arn'] }
                            - 'index'
                            - '*'
                - Effect: Allow
                  Action:
                      - 'dynamodb:PutItem'
                      - 'dynamodb:GetItem'
                      - 'dynamodb:DeleteItem'
                      - 'dynamodb:Scan'
                  Resource:
                      - { 'Fn::GetAtt': ['MessagesTable', 'Arn'] }
                - Effect: Allow
                  Action:
                      - 'dynamodb:Query'
                  Resource:
                      Fn::Join:
                          - '/'
                          - - { 'Fn::GetAtt': ['MessagesTable', 'Arn'] }
                            - 'index'
                            - '*'

functions:
    websocketHandler:
        handler: src/handlers.handle
        events:
            - websocket:
                  route: $connect
            - websocket:
                  route: $disconnect
            - websocket:
                  route: getMessages
            - websocket:
                  route: sendMessage
    getMessages:
        handler: src/getMessages.handler
        events:
            - http:
                  path: messages
                  method: get
                  cors: true
                  request:
                      parameters:
                          querystrings:
                              roomId: true
                              startTime: false
                              endTime: false
                              limit: false

plugins:
    - serverless-plugin-typescript

resources:
    Resources:
        ClientsTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: Clients
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
                AttributeDefinitions:
                    - AttributeName: connectionId
                      AttributeType: S
                    - AttributeName: userId
                      AttributeType: S
                KeySchema:
                    - AttributeName: connectionId
                      KeyType: HASH
                GlobalSecondaryIndexes:
                    - IndexName: UserIdIndex
                      KeySchema:
                          - AttributeName: userId
                            KeyType: HASH
                      ProvisionedThroughput:
                          ReadCapacityUnits: 1
                          WriteCapacityUnits: 1
                      Projection:
                          ProjectionType: 'ALL'
        MessagesTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: Messages
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
                AttributeDefinitions:
                    - AttributeName: messageId
                      AttributeType: S
                    - AttributeName: createdAt
                      AttributeType: N
                    - AttributeName: roomId
                      AttributeType: S
                KeySchema:
                    - AttributeName: messageId
                      KeyType: HASH
                    - AttributeName: createdAt
                      KeyType: RANGE
                GlobalSecondaryIndexes:
                    - IndexName: RoomIdIndex
                      KeySchema:
                          - AttributeName: roomId
                            KeyType: HASH
                          - AttributeName: createdAt
                            KeyType: RANGE
                      ProvisionedThroughput:
                          ReadCapacityUnits: 1
                          WriteCapacityUnits: 1
                      Projection:
                          ProjectionType: 'ALL'
